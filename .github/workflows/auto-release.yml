name: Auto Release

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: read

jobs:
  release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      # Generate release notes (Release Drafter inline)
      - name: Generate release notes
        id: notes
        uses: release-drafter/release-drafter@v6
        with:
          config-name: inline
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Extract version number from generated tag (strip leading "v")
      - name: Extract version
        id: version
        run: |
          TAG_NAME="${{ steps.notes.outputs.tag_name }}"
          VERSION="${TAG_NAME#v}"
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # Update package.json and manifest.json
      - name: Update version in files
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          jq ".version = \"${VERSION}\"" package.json > package.tmp && mv package.tmp package.json
          jq ".version = \"${VERSION}\"" manifest.json > manifest.tmp && mv manifest.tmp manifest.json

      - name: Commit version bump
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add package.json manifest.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.tag }} [skip ci]"
          git push

      - name: Create tag
        run: |
          git tag ${{ steps.version.outputs.tag }}
          git push origin ${{ steps.version.outputs.tag }}

      - name: Build zip
        run: npm run package

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: ${{ steps.version.outputs.tag }}
          body: ${{ steps.notes.outputs.body }}
          files: dist/conventional-keys.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

